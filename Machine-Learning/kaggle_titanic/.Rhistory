install.packages("slidify")
install.packages("ggplot2")
library("ggplot2")
search()
clear
clear()
install.packages("devtools")
library(devtools)
find_rtools()
install.packages('randomForest')
setwd("~/data-science/Machine-Learning/kaggle_titanic")
test <- read.csv("test.csv")
train <- read.csv("train.csv")
test$Survived <- NA
combi <- rbind(train, test)
combi$Name <- as.character(combi$Name)
combi$Title <- sapply(combi$Name, FUN = function(x){strsplit(x, split = '[,.]')[[1]][2]})
combi$Title <- sub(' ', '', combi$Title)
table(combi$Title)
combi$Title[combi$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combi$Title[combi$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'
combi$Title <- factor(combi$Title)
combi$FamilySize <- combi$SibSp + combi$Parch + 1
combi$Surname <- sapply(combi$Name, FUN = function(x) {strsplit(x, split = '[,.]')[[1]][1]})
combi$FamilyID <- paste(as.character(combi$FamilySize), combi$Surname, sep = "")
combi$FamilyID[combi$FamilySize <= 2] <- 'Small'
famIDs <- data.frame(table(combi$FamilyID))
famIDs <- famIDs[famIDs$Freq <= 2, ]
combi$FamilyID[combi$FamilyID %in% famIDs$Var1] <- 'Small'
combi$FamilyID <- factor(combi$FamilyID)
summary(combi$Age)
agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + FamilySize,
data = combi[!is.na(combi$Age), ],
method = "anova")
install.packages('rpart')
library(rpart)
agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + FamilySize,
data = combi[!is.na(combi$Age), ],
method = "anova")
combi$Age[is.na(combi$Age)] <- predict(agefit, combi[is.na(combi$Age), ])
summary(combi)
summary(combi$Embarked)
combi$Embarked[which(combi$Embarked == '')] <- "S"
combi$Embarked <- factor(combi$Embarked)
summary(combi$Fare)
combi$Fare[which(is.na(combi$Fare))] <- median(combi$Fare, na.rm = TRUE)
combi$FamilyID2 <- combi$FamilyID
combi$FamilyID2 <- as.character(combi$FamilyID2)
combi$FamilyID2[combi$FamilySize <= 3] <- 'Small'
combi$FamilyID2 <- factor(combi$FamilyID2)
install.packages('randomForest')
library(randomForest)
set.seed(415)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +
Embarked + Title + FamilySize + FamilyID2
data = train,
importance = TRUE,
ntree = 2000)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +
Embarked + Title + FamilySize + FamilyID2,
data = train,
importance = TRUE,
ntree = 2000)
View(train)
combi$FamilyID2 <- factor(combi$FamilyID2)
train <- combi[1:891, ]
test <- combi[892:1309, ]
install.packages('randomForest')
install.packages("randomForest")
library(randomForest)
set.seed(415)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +
Embarked + Title + FamilySize + FamilyID2,
data = train,
importance = TRUE,
ntree = 2000)
varImpPlot(fit)
prediction <- predict(fit, test)
submit <- data.frame(PassengerId = test$PassengerId, Survived = prediction)
install.package('party')
library(party)
set.seed(415)
fit <- cforest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +
Embarked + Title + FamilySize + FamilyID2
data = train,
controls = cforest_unbiased(ntree = 2000, mtry = 3))
fit <- cforest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +
Embarked + Title + FamilySize + FamilyID2,
data = train,
controls = cforest_unbiased(ntree = 2000, mtry = 3))
install.package('party')
install.packages('party')
library(party)
set.seed(415)
fit <- cforest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +
Embarked + Title + FamilySize + FamilyID2,
data = train,
controls = cforest_unbiased(ntree = 2000, mtry = 3))
prediction <- predict(fit, test, OOB = TRUE, type = "response")
